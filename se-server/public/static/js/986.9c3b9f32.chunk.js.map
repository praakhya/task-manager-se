{"version":3,"file":"static/js/986.9c3b9f32.chunk.js","mappings":"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","sources":["components/Notes/DeletedNotes.jsx","components/Notes/ManageNote.jsx","components/spinner/index.jsx","components/Notes/DeleteNote.jsx","components/Notes/NoteList.jsx"],"sourcesContent":["import React from 'react'\nimport NotesList from './NoteList'\n\nconst AllNotes = (props) => {\n\treturn (\n\t\t<div>\n\t\t\t<div>Recently Deleted Notes</div>\n\t\t\t<div>\n\t\t\t\t<NotesList favourites={false}/>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default AllNotes\n","import React, { useState, useEffect } from 'react'\nimport { useContext } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport AppContext from '../../contexts/AppContext'\nimport axios from 'axios'\nconst baseUrl=\"/api\"\nconst ManageNote = (props) => {\n\tconst [title, setTitle] = useState('')\n\tconst [description, setDescription] = useState('')\n\tconst [error, setError] = useState(false)\n\tconst [errorMessage, setErrorMessage] = useState('')\n\tconst { userInfo } = useContext(AppContext)\n\n\tuseEffect(() => {\n\t\tif (props.mode == 'edit') {\n\t\t\tsetTitle(props.note.title)\n\t\t\tsetDescription(props.note.description)\n\t\t}\n\t}, [])\n\n\tconst handleManageNote = (e) => {\n\t\tif (!title || !description) {\n\t\t\tsetErrorMessage('Fill all fields!')\n\t\t\tsetError(true)\n\t\t\treturn\n\t\t}\n\n\t\tconst headers = {\n\t\t\tAuthorization: 'accessToken=' + userInfo.accessToken + ';username=' + userInfo.username\n\t\t}\n\n\t\tlet _data = {\n\t\t\ttitle: title,\n\t\t\tdescription: description\n\t\t}\n\n\t\tif (props.mode == 'edit') {\n\t\t\t_data.noteId = props.note._id\n\t\t\taxios\n\t\t\t\t.put(baseUrl+'/load/note', _data, { headers: headers })\n\t\t\t\t.then((response) => {\n\t\t\t\t\thandleRequestResponse(response)\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.log(\"error in notes put:\",error)\n\t\t\t\t\tsetErrorMessage('Error in Saving data!')\n\t\t\t\t\tsetError(true)\n\t\t\t\t})\n\t\t} else {\n\t\t\taxios\n\t\t\t\t.post(baseUrl+'/load/note', _data, { headers: headers })\n\t\t\t\t.then((response) => {\n\t\t\t\t\thandleRequestResponse(response)\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.log(\"error in /load/note:\",error)\n\t\t\t\t\tsetErrorMessage('Error in Saving data!')\n\t\t\t\t\tsetError(true)\n\t\t\t\t})\n\t\t}\n\t}\n\n\tconst handleRequestResponse = (response) => {\n\t\tif (response && response.data) {\n\t\t\tif (response.data.status == 'error') {\n\t\t\t\tconsole.log(error)\n\t\t\t\tsetErrorMessage('Error in Saving data!')\n\t\t\t\tsetError(true)\n\t\t\t\treturn\n\t\t\t}\n\t\t\tsetError(false)\n\t\t}\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<Modal show={true} onHide={props.handleClose}>\n\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t<Modal.Title>Add Note</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{error && <label style={{ color: 'red' }}>{errorMessage}</label>}\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t<Form.Label>Title</Form.Label>\n\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tplaceholder='Enter title'\n\t\t\t\t\t\t\t\t\tvalue={title ? title : ''}\n\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\tsetTitle(e.target.value)\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t<Form.Label>Description</Form.Label>\n\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\tas='textarea'\n\t\t\t\t\t\t\t\t\tplaceholder='Enter description'\n\t\t\t\t\t\t\t\t\tvalue={description ? description : ''}\n\t\t\t\t\t\t\t\t\tmaxLength={500}\n\t\t\t\t\t\t\t\t\trows={6}\n\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\tsetDescription(e.target.value)\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</div>\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button variant='secondary' onClick={props.handleClose}>\n\t\t\t\t\t\tClose\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button variant='primary' onClick={handleManageNote} style={{ backgroundColor: 'var(--dark-green)', borderColor: 'var(--dark-green)', width: \"40%\" }}>\n\t\t\t\t\t\t{props.mode == 'edit' ? 'Update' : 'Add'}\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t</div>\n\t)\n}\n\nexport default ManageNote\n","import React from 'react'\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\nimport './style.css'\n\nconst propTypes = {\n\t/**\n\t * Specifies size as small | large for the spinner.\n\t * @type ('sm'|'lg')\n\t * @default ('md')\n\t */\n\tsize: PropTypes.oneOf(['sm', 'lg', 'md']),\n\n\t/**\n\t * Specifies the motion color\n\t * @default ('#267CB2')\n\t */\n\tcolor: PropTypes.string,\n\n\t/**\n\t * Specifies the circle color\n\t * @default ('#DEDEDE')\n\t */\n\tcircleColor: PropTypes.string,\n\n\t/**\n\t * Disables spinner wrapper\n\t * @default ('false')\n\t */\n\tdisableWrapper: PropTypes.bool\n}\n\nconst defaultProps = {\n\tsize: 'md',\n\tcolor: '#267CB2',\n\tcircleColor: '#DEDEDE',\n\tdisableWrapper: false\n}\n\nconst spinnerClassprefix = 'spinner'\n\nconst Spinner = (props) => {\n\tlet { size, classes, color, circleColor, disableWrapper, children, ...attributes } = props\n\n\tconst classList = classNames('spinner', classes, size && `${size}`)\n\n\tlet style = {}\n\tstyle['borderColor'] = circleColor ? circleColor : defaultProps.circleColor\n\tstyle['borderTopColor'] = color ? color : defaultProps.color\n\n\treturn (\n\t\t<div className={disableWrapper ? '' : 'spinner-wrapper flex-center'}>\n\t\t\t{children ? children : !disableWrapper && <div className='empty-string'>&nbsp;</div>} <div className={classList} style={style} {...attributes}></div>\n\t\t</div>\n\t)\n}\n\nSpinner.propTypes = propTypes\nSpinner.defaultProps = defaultProps\n\nexport default Spinner\n","import React, { useState, useEffect } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\n\nconst DeleteNoteModal = (props) => {\n\treturn (\n\t\t<div>\n\t\t\t<Modal show={true} onHide={props.handleClose}>\n\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t<Modal.Title>Add Note</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label>Do you want to delete the note?</label>\n\t\t\t\t\t</div>\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button variant='secondary' onClick={props.handleClose}>\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button variant='primary' onClick={props.handleDelete} style={{ backgroundColor: 'var(--dark-green)', borderColor: 'var(--dark-green)' }}>\n\t\t\t\t\t\tDelete\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t</div>\n\t)\n}\n\nexport default DeleteNoteModal\n","import React, { useContext, useEffect, forwardRef, useRef, useImperativeHandle } from 'react'\nimport { useState } from 'react'\nimport Spinner from '../spinner'\nimport Button from 'react-bootstrap/esm/Button'\nimport Card from 'react-bootstrap/Card'\nimport axios from 'axios'\nimport { MdOutlineModeEditOutline, MdFavoriteBorder, MdDeleteOutline } from 'react-icons/md'\nimport AppContext from '../../contexts/AppContext'\nimport \"./Notes.css\"\n\nimport ManageNote from './ManageNote'\nimport DeleteNoteModal from './DeleteNote'\nconst baseUrl = \"/api\"\nconst defaultNotesList = [{\n\t\"title\": \"sacqw\",\n\t\"description\": \"cwqcce\",\n\t\"isFavourite\": false,\n\t\"username\": \"userOne\",\n\t\"createdAt\": \"2023-11-07T08:51:58.488Z\",\n\t\"updatedAt\": \"2023-11-07T08:51:58.488Z\"\n},\n{\n\t\"title\": \"sacqw\",\n\t\"description\": \"cwqcce\",\n\t\"isFavourite\": false,\n\t\"username\": \"userOne\",\n\t\"createdAt\": \"2023-11-07T08:52:13.138Z\",\n\t\"updatedAt\": \"2023-11-07T08:52:13.138Z\"\n}]\nconst NotesList = (props, ref) => {\n\tconst [isLoading, setIsLoading] = useState(true)\n\tconst [notesList, setNotesList] = useState([])\n\tconst appContext = useContext(AppContext)\n\tvar storedUserInfo = JSON.parse(sessionStorage.getItem(\"userInfo\"))\n\tconsole.log(\"Stored user info:\", storedUserInfo, typeof (storedUserInfo))\n\tif (!appContext.userInfo) {\n\t\tappContext.setUserInfo(storedUserInfo)\n\n\t}\n\tconst [currentNote, setCurrentNote] = useState(null)\n\tconst [isShowAddNote, setShowAddNote] = useState(false)\n\tconst [isShowDeleteModal, setShowDeleteModal] = useState(false)\n\tvar headers = {}\n\tif (appContext.userInfo) {\n\t\theaders = {\n\t\t\tAuthorization: 'accessToken=' + appContext.userInfo.accessToken + ';username=' + appContext.userInfo.username\n\t\t}\n\t}\n\telse {\n\t\theaders = {\n\t\t\tAuthorization: 'accessToken=;username='\n\t\t}\n\t}\n\n\n\tuseEffect(() => {\n\t\tconsole.log(\"In useEffect body of noteslist\")\n\t\tgetNotesList()\n\t}, [isLoading])\n\n\tconst getNotesList = () => {\n\t\tconsole.log(\"headers:\", headers)\n\t\taxios\n\t\t\t.get(baseUrl + '/load/notes', { headers: headers })\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(\"Response in getnoteslist:\", res)\n\t\t\t\tif (res && res.data && res.data.notes) {\n\t\t\t\t\tsetNotesList(res.data.notes)\n\t\t\t\t} else {\n\t\t\t\t\tsetNotesList(defaultNotesList)\n\t\t\t\t}\n\n\t\t\t\tsetIsLoading(false)\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(\"/load/notes:\", error)\n\t\t\t\tsetNotesList(defaultNotesList)\n\t\t\t\tsetIsLoading(false)\n\t\t\t})\n\t}\n\n\tuseImperativeHandle(ref, () => ({\n\t\tgetNotesList: getNotesList\n\t}))\n\n\tconst handleEditNote = (note) => {\n\t\tconsole.log('Edit Note Invoked', note)\n\t\tsetCurrentNote(note)\n\t\tsetShowAddNote(true)\n\t}\n\n\tconst handleMarkFavourite = (note) => {\n\t\tconsole.log('Mark as Favourite Note Invoked', note)\n\n\t\tconst headers = {\n\t\t\tAuthorization: 'accessToken=' + appContext.userInfo.accessToken + ';username=' + appContext.userInfo.username\n\t\t}\n\n\t\taxios\n\t\t\t.post(\n\t\t\t\tbaseUrl + '/load/note/favourite',\n\t\t\t\t{\n\t\t\t\t\tnoteId: note._id,\n\t\t\t\t\tisFavourite: !note.isFavourite\n\t\t\t\t},\n\t\t\t\t{ headers: headers }\n\t\t\t)\n\t\t\t.then((res) => {\n\t\t\t\tif (res && res.data && res.data.status == 'success') {\n\t\t\t\t\tgetNotesList()\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(\"error /load/note/favourite:\", error)\n\t\t\t\tsetNotesList([])\n\t\t\t\tsetIsLoading(false)\n\t\t\t})\n\t}\n\n\tconst handleDelete = (note) => {\n\t\tconsole.log('Delete Note Invoked', note)\n\t\tsetCurrentNote(note)\n\t\tsetShowDeleteModal(true)\n\t}\n\n\tconst handleDeleteNote = (note) => {\n\t\tconst headers = {\n\t\t\tAuthorization: 'accessToken=' + appContext.userInfo.accessToken + ';username=' + appContext.userInfo.username\n\t\t}\n\n\t\taxios\n\t\t\t.delete(baseUrl + '/load/note/' + note._id, { headers: headers })\n\t\t\t.then((res) => {\n\t\t\t\tif (res && res.data && res.data.status == 'success') {\n\t\t\t\t\tgetNotesList()\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(\"error /load/note/:\", error)\n\t\t\t\tsetNotesList([])\n\t\t\t\tsetIsLoading(false)\n\t\t\t})\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t{isLoading ? (\n\t\t\t\t<Spinner size={'md'} />\n\t\t\t) :\n\t\t\t\t(notesList.length ? (\n\t\t\t\t\t<div className='noteListContainer'>\n\t\t\t\t\t\t{notesList.map((note) => {\n\t\t\t\t\t\t\tlet date = new Date(note.createdAt)\n\t\t\t\t\t\t\tlet formattedDate = new Intl.DateTimeFormat('en-GB', { dateStyle: 'medium' }).format(date)\n\t\t\t\t\t\t\tif (note.isFavourite==props.favourites) {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div key={note._id}>\n\t\t\t\t\t\t\t\t\t<Card style={{ width: '15em' }}>\n\t\t\t\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t\t\t\t<Card.Title>{note.title}</Card.Title>\n\t\t\t\t\t\t\t\t\t\t\t<Card.Text>{note.description}</Card.Text>\n\t\t\t\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t\t\t\t\t<Card.Footer>\n\t\t\t\t\t\t\t\t\t\t\t\t<span style={{ display: 'flex', flexDirection: \"row\", justifyContent:\"space-between\"}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>{formattedDate}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MdFavoriteBorder\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize={20}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer', color: note.isFavourite ? 'red' : 'black' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleMarkFavourite(note)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MdOutlineModeEditOutline\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize={20}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditNote(note)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MdDeleteOutline\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize={20}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleDelete(note)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t</Card.Footer>\n\t\t\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div style={{ textAlign: 'center', paddingTop: 120 }}>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\tYou don't have any notes!{' '}\n\t\t\t\t\t\t\t\t<span onClick={props.handleCreateNote} style={{ color: 'var(--dark-green)', cursor: 'pointer' }}>\n\t\t\t\t\t\t\t\t\tAdd New Note\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{/* <Button style={{ backgroundColor: '#fd5d5b', borderColor: '#fd5d5b', width: 180, marginTop: 16 }}>&nbsp;&nbsp;&nbsp;Add New Note&nbsp;&nbsp;&nbsp;</Button> */}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t\n\t\t\t\t\n\n\t\t\t{isShowAddNote && (\n\t\t\t\t<ManageNote\n\t\t\t\t\tmode={'edit'}\n\t\t\t\t\tnote={currentNote}\n\t\t\t\t\thandleClose={() => {\n\t\t\t\t\t\tsetShowAddNote(false)\n\t\t\t\t\t}}\n\t\t\t\t\tonManageNoteSuccess={() => {\n\t\t\t\t\t\tgetNotesList()\n\t\t\t\t\t\tsetShowAddNote(false)\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\n\t\t\t{isShowDeleteModal && (\n\t\t\t\t<DeleteNoteModal\n\t\t\t\t\thandleClose={() => {\n\t\t\t\t\t\tsetShowDeleteModal(false)\n\t\t\t\t\t}}\n\t\t\t\t\thandleDelete={() => {\n\t\t\t\t\t\thandleDeleteNote(currentNote)\n\t\t\t\t\t\tsetShowDeleteModal(false)\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nexport default forwardRef(NotesList)\n"],"names":["props","_jsxs","children","_jsx","NotesList","favourites","baseUrl","_useState","useState","_useState2","_slicedToArray","title","setTitle","_useState3","_useState4","description","setDescription","_useState5","_useState6","error","setError","_useState7","_useState8","errorMessage","setErrorMessage","userInfo","useContext","AppContext","useEffect","mode","note","handleRequestResponse","response","data","status","console","log","Modal","show","onHide","handleClose","Header","closeButton","Title","Body","style","color","Form","Group","Label","Control","type","placeholder","value","onChange","e","target","as","maxLength","rows","Footer","Button","variant","onClick","headers","Authorization","accessToken","username","_data","noteId","_id","axios","put","then","catch","post","backgroundColor","borderColor","width","defaultProps","size","circleColor","disableWrapper","Spinner","classes","attributes","_objectWithoutProperties","_excluded","classList","classNames","concat","className","_objectSpread","handleDelete","defaultNotesList","ref","isLoading","setIsLoading","notesList","setNotesList","appContext","storedUserInfo","JSON","parse","sessionStorage","getItem","setUserInfo","currentNote","setCurrentNote","isShowAddNote","setShowAddNote","_useState9","_useState10","isShowDeleteModal","setShowDeleteModal","getNotesList","get","res","notes","useImperativeHandle","length","map","date","Date","createdAt","formattedDate","Intl","DateTimeFormat","dateStyle","format","isFavourite","Card","Text","display","flexDirection","justifyContent","MdFavoriteBorder","cursor","handleMarkFavourite","MdOutlineModeEditOutline","handleEditNote","MdDeleteOutline","textAlign","paddingTop","handleCreateNote","ManageNote","onManageNoteSuccess","DeleteNoteModal","delete","handleDeleteNote","forwardRef"],"sourceRoot":""}