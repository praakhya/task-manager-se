{"version":3,"file":"static/js/931.1282dbf4.chunk.js","mappings":"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","sources":["components/Notes/AllNotes.jsx","components/Notes/ManageNote.jsx","components/spinner/index.jsx","components/Notes/DeleteNote.jsx","components/Notes/NoteList.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react'\nimport NotesList from './NoteList'\nimport Button from 'react-bootstrap/esm/Button'\nimport ManageNote from './ManageNote'\nimport \"./Notes.css\"\nconst AllNotes = (props) => {\n\tconst [isShowAddNote, setShowAddNote] = useState(false)\n\n\tconst childRef = useRef()\n\n\tconst handleAddNote = () => {\n\t\tsetShowAddNote(true)\n\t}\n\n\treturn (\n\t\t<div className=\"allNotesContainer\">\n\t\t\t<div className='allNotesHeader'>\n\t\t\t\t<h1>All Notes</h1>\n\t\t\t\t<div>\n\t\t\t\t\t<Button onClick={handleAddNote} \n\t\t\t\t\tstyle={{ backgroundColor: 'var(--dark-green)', borderColor: 'var(--dark-green)'}}\n\t\t\t\t\tclassName='addNoteButton'>\n\t\t\t\t\t\tAdd New Note\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<NotesList handleCreateNote={handleAddNote} ref={childRef} favourites={false}/>\n\t\t\t</div>\n\t\t\t{isShowAddNote && (\n\t\t\t\t<ManageNote\n\t\t\t\t\thandleClose={() => {\n\t\t\t\t\t\tsetShowAddNote(false)\n\t\t\t\t\t}}\n\t\t\t\t\tonManageNoteSuccess={(note) => {\n\t\t\t\t\t\tchildRef.current.getNotesList()\n\t\t\t\t\t\tsetShowAddNote(false)\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nexport default AllNotes\n","import React, { useState, useEffect } from 'react'\nimport { useContext } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\nimport AppContext from '../../contexts/AppContext'\nimport axios from 'axios'\nconst baseUrl=\"/api\"\nconst ManageNote = (props) => {\n\tconst [title, setTitle] = useState('')\n\tconst [description, setDescription] = useState('')\n\tconst [error, setError] = useState(false)\n\tconst [errorMessage, setErrorMessage] = useState('')\n\tconst { userInfo } = useContext(AppContext)\n\n\tuseEffect(() => {\n\t\tif (props.mode == 'edit') {\n\t\t\tsetTitle(props.note.title)\n\t\t\tsetDescription(props.note.description)\n\t\t}\n\t}, [])\n\n\tconst handleManageNote = (e) => {\n\t\tif (!title || !description) {\n\t\t\tsetErrorMessage('Fill all fields!')\n\t\t\tsetError(true)\n\t\t\treturn\n\t\t}\n\n\t\tconst headers = {\n\t\t\tAuthorization: 'accessToken=' + userInfo.accessToken + ';username=' + userInfo.username\n\t\t}\n\n\t\tlet _data = {\n\t\t\ttitle: title,\n\t\t\tdescription: description\n\t\t}\n\n\t\tif (props.mode == 'edit') {\n\t\t\t_data.noteId = props.note._id\n\t\t\taxios\n\t\t\t\t.put(baseUrl+'/load/note', _data, { headers: headers })\n\t\t\t\t.then((response) => {\n\t\t\t\t\thandleRequestResponse(response)\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.log(\"error in notes put:\",error)\n\t\t\t\t\tsetErrorMessage('Error in Saving data!')\n\t\t\t\t\tsetError(true)\n\t\t\t\t})\n\t\t} else {\n\t\t\taxios\n\t\t\t\t.post(baseUrl+'/load/note', _data, { headers: headers })\n\t\t\t\t.then((response) => {\n\t\t\t\t\thandleRequestResponse(response)\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.log(\"error in /load/note:\",error)\n\t\t\t\t\tsetErrorMessage('Error in Saving data!')\n\t\t\t\t\tsetError(true)\n\t\t\t\t})\n\t\t}\n\t}\n\n\tconst handleRequestResponse = (response) => {\n\t\tif (response && response.data) {\n\t\t\tif (response.data.status == 'error') {\n\t\t\t\tconsole.log(error)\n\t\t\t\tsetErrorMessage('Error in Saving data!')\n\t\t\t\tsetError(true)\n\t\t\t\treturn\n\t\t\t}\n\t\t\tsetError(false)\n\t\t}\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<Modal show={true} onHide={props.handleClose}>\n\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t<Modal.Title>Add Note</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{error && <label style={{ color: 'red' }}>{errorMessage}</label>}\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t<Form.Label>Title</Form.Label>\n\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tplaceholder='Enter title'\n\t\t\t\t\t\t\t\t\tvalue={title ? title : ''}\n\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\tsetTitle(e.target.value)\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t<Form.Label>Description</Form.Label>\n\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\tas='textarea'\n\t\t\t\t\t\t\t\t\tplaceholder='Enter description'\n\t\t\t\t\t\t\t\t\tvalue={description ? description : ''}\n\t\t\t\t\t\t\t\t\tmaxLength={500}\n\t\t\t\t\t\t\t\t\trows={6}\n\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\tsetDescription(e.target.value)\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</div>\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button variant='secondary' onClick={props.handleClose}>\n\t\t\t\t\t\tClose\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button variant='primary' onClick={handleManageNote} style={{ backgroundColor: 'var(--dark-green)', borderColor: 'var(--dark-green)', width: \"40%\" }}>\n\t\t\t\t\t\t{props.mode == 'edit' ? 'Update' : 'Add'}\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t</div>\n\t)\n}\n\nexport default ManageNote\n","import React from 'react'\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\nimport './style.css'\n\nconst propTypes = {\n\t/**\n\t * Specifies size as small | large for the spinner.\n\t * @type ('sm'|'lg')\n\t * @default ('md')\n\t */\n\tsize: PropTypes.oneOf(['sm', 'lg', 'md']),\n\n\t/**\n\t * Specifies the motion color\n\t * @default ('#267CB2')\n\t */\n\tcolor: PropTypes.string,\n\n\t/**\n\t * Specifies the circle color\n\t * @default ('#DEDEDE')\n\t */\n\tcircleColor: PropTypes.string,\n\n\t/**\n\t * Disables spinner wrapper\n\t * @default ('false')\n\t */\n\tdisableWrapper: PropTypes.bool\n}\n\nconst defaultProps = {\n\tsize: 'md',\n\tcolor: '#267CB2',\n\tcircleColor: '#DEDEDE',\n\tdisableWrapper: false\n}\n\nconst spinnerClassprefix = 'spinner'\n\nconst Spinner = (props) => {\n\tlet { size, classes, color, circleColor, disableWrapper, children, ...attributes } = props\n\n\tconst classList = classNames('spinner', classes, size && `${size}`)\n\n\tlet style = {}\n\tstyle['borderColor'] = circleColor ? circleColor : defaultProps.circleColor\n\tstyle['borderTopColor'] = color ? color : defaultProps.color\n\n\treturn (\n\t\t<div className={disableWrapper ? '' : 'spinner-wrapper flex-center'}>\n\t\t\t{children ? children : !disableWrapper && <div className='empty-string'>&nbsp;</div>} <div className={classList} style={style} {...attributes}></div>\n\t\t</div>\n\t)\n}\n\nSpinner.propTypes = propTypes\nSpinner.defaultProps = defaultProps\n\nexport default Spinner\n","import React, { useState, useEffect } from 'react'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\n\nconst DeleteNoteModal = (props) => {\n\treturn (\n\t\t<div>\n\t\t\t<Modal show={true} onHide={props.handleClose}>\n\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t<Modal.Title>Add Note</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label>Do you want to delete the note?</label>\n\t\t\t\t\t</div>\n\t\t\t\t</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button variant='secondary' onClick={props.handleClose}>\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button variant='primary' onClick={props.handleDelete} style={{ backgroundColor: 'var(--dark-green)', borderColor: 'var(--dark-green)' }}>\n\t\t\t\t\t\tDelete\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t</div>\n\t)\n}\n\nexport default DeleteNoteModal\n","import React, { useContext, useEffect, forwardRef, useRef, useImperativeHandle } from 'react'\nimport { useState } from 'react'\nimport Spinner from '../spinner'\nimport Button from 'react-bootstrap/esm/Button'\nimport Card from 'react-bootstrap/Card'\nimport axios from 'axios'\nimport { MdOutlineModeEditOutline, MdFavoriteBorder, MdDeleteOutline } from 'react-icons/md'\nimport AppContext from '../../contexts/AppContext'\nimport \"./Notes.css\"\n\nimport ManageNote from './ManageNote'\nimport DeleteNoteModal from './DeleteNote'\nconst baseUrl = \"/api\"\nconst defaultNotesList = [{\n\t\"title\": \"sacqw\",\n\t\"description\": \"cwqcce\",\n\t\"isFavourite\": false,\n\t\"username\": \"userOne\",\n\t\"createdAt\": \"2023-11-07T08:51:58.488Z\",\n\t\"updatedAt\": \"2023-11-07T08:51:58.488Z\"\n},\n{\n\t\"title\": \"sacqw\",\n\t\"description\": \"cwqcce\",\n\t\"isFavourite\": false,\n\t\"username\": \"userOne\",\n\t\"createdAt\": \"2023-11-07T08:52:13.138Z\",\n\t\"updatedAt\": \"2023-11-07T08:52:13.138Z\"\n}]\nconst NotesList = (props, ref) => {\n\tconst [isLoading, setIsLoading] = useState(true)\n\tconst [notesList, setNotesList] = useState([])\n\tconst appContext = useContext(AppContext)\n\tvar storedUserInfo = JSON.parse(sessionStorage.getItem(\"userInfo\"))\n\tconsole.log(\"Stored user info:\", storedUserInfo, typeof (storedUserInfo))\n\tif (!appContext.userInfo) {\n\t\tappContext.setUserInfo(storedUserInfo)\n\n\t}\n\tconst [currentNote, setCurrentNote] = useState(null)\n\tconst [isShowAddNote, setShowAddNote] = useState(false)\n\tconst [isShowDeleteModal, setShowDeleteModal] = useState(false)\n\tvar headers = {}\n\tif (appContext.userInfo) {\n\t\theaders = {\n\t\t\tAuthorization: 'accessToken=' + appContext.userInfo.accessToken + ';username=' + appContext.userInfo.username\n\t\t}\n\t}\n\telse {\n\t\theaders = {\n\t\t\tAuthorization: 'accessToken=;username='\n\t\t}\n\t}\n\n\n\tuseEffect(() => {\n\t\tconsole.log(\"In useEffect body of noteslist\")\n\t\tgetNotesList()\n\t}, [isLoading])\n\n\tconst getNotesList = () => {\n\t\tconsole.log(\"headers:\", headers)\n\t\taxios\n\t\t\t.get(baseUrl + '/load/notes', { headers: headers })\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(\"Response in getnoteslist:\", res)\n\t\t\t\tif (res && res.data && res.data.notes) {\n\t\t\t\t\tsetNotesList(res.data.notes)\n\t\t\t\t} else {\n\t\t\t\t\tsetNotesList(defaultNotesList)\n\t\t\t\t}\n\n\t\t\t\tsetIsLoading(false)\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(\"/load/notes:\", error)\n\t\t\t\tsetNotesList(defaultNotesList)\n\t\t\t\tsetIsLoading(false)\n\t\t\t})\n\t}\n\n\tuseImperativeHandle(ref, () => ({\n\t\tgetNotesList: getNotesList\n\t}))\n\n\tconst handleEditNote = (note) => {\n\t\tconsole.log('Edit Note Invoked', note)\n\t\tsetCurrentNote(note)\n\t\tsetShowAddNote(true)\n\t}\n\n\tconst handleMarkFavourite = (note) => {\n\t\tconsole.log('Mark as Favourite Note Invoked', note)\n\n\t\tconst headers = {\n\t\t\tAuthorization: 'accessToken=' + appContext.userInfo.accessToken + ';username=' + appContext.userInfo.username\n\t\t}\n\n\t\taxios\n\t\t\t.post(\n\t\t\t\tbaseUrl + '/load/note/favourite',\n\t\t\t\t{\n\t\t\t\t\tnoteId: note._id,\n\t\t\t\t\tisFavourite: !note.isFavourite\n\t\t\t\t},\n\t\t\t\t{ headers: headers }\n\t\t\t)\n\t\t\t.then((res) => {\n\t\t\t\tif (res && res.data && res.data.status == 'success') {\n\t\t\t\t\tgetNotesList()\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(\"error /load/note/favourite:\", error)\n\t\t\t\tsetNotesList([])\n\t\t\t\tsetIsLoading(false)\n\t\t\t})\n\t}\n\n\tconst handleDelete = (note) => {\n\t\tconsole.log('Delete Note Invoked', note)\n\t\tsetCurrentNote(note)\n\t\tsetShowDeleteModal(true)\n\t}\n\n\tconst handleDeleteNote = (note) => {\n\t\tconst headers = {\n\t\t\tAuthorization: 'accessToken=' + appContext.userInfo.accessToken + ';username=' + appContext.userInfo.username\n\t\t}\n\n\t\taxios\n\t\t\t.delete(baseUrl + '/load/note/' + note._id, { headers: headers })\n\t\t\t.then((res) => {\n\t\t\t\tif (res && res.data && res.data.status == 'success') {\n\t\t\t\t\tgetNotesList()\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(\"error /load/note/:\", error)\n\t\t\t\tsetNotesList([])\n\t\t\t\tsetIsLoading(false)\n\t\t\t})\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t{isLoading ? (\n\t\t\t\t<Spinner size={'md'} />\n\t\t\t) :\n\t\t\t\t(notesList.length ? (\n\t\t\t\t\t<div className='noteListContainer'>\n\t\t\t\t\t\t{notesList.map((note) => {\n\t\t\t\t\t\t\tlet date = new Date(note.createdAt)\n\t\t\t\t\t\t\tlet formattedDate = new Intl.DateTimeFormat('en-GB', { dateStyle: 'medium' }).format(date)\n\t\t\t\t\t\t\tif (note.isFavourite==props.favourites) {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div key={note._id}>\n\t\t\t\t\t\t\t\t\t<Card style={{ width: '15em' }}>\n\t\t\t\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t\t\t\t<Card.Title>{note.title}</Card.Title>\n\t\t\t\t\t\t\t\t\t\t\t<Card.Text>{note.description}</Card.Text>\n\t\t\t\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t\t\t\t\t<Card.Footer>\n\t\t\t\t\t\t\t\t\t\t\t\t<span style={{ display: 'flex', flexDirection: \"row\", justifyContent:\"space-between\"}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>{formattedDate}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MdFavoriteBorder\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize={20}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer', color: note.isFavourite ? 'red' : 'black' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleMarkFavourite(note)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MdOutlineModeEditOutline\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize={20}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleEditNote(note)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MdDeleteOutline\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize={20}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleDelete(note)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t</Card.Footer>\n\t\t\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div style={{ textAlign: 'center', paddingTop: 120 }}>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\tYou don't have any notes!{' '}\n\t\t\t\t\t\t\t\t<span onClick={props.handleCreateNote} style={{ color: 'var(--dark-green)', cursor: 'pointer' }}>\n\t\t\t\t\t\t\t\t\tAdd New Note\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{/* <Button style={{ backgroundColor: '#fd5d5b', borderColor: '#fd5d5b', width: 180, marginTop: 16 }}>&nbsp;&nbsp;&nbsp;Add New Note&nbsp;&nbsp;&nbsp;</Button> */}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t\n\t\t\t\t\n\n\t\t\t{isShowAddNote && (\n\t\t\t\t<ManageNote\n\t\t\t\t\tmode={'edit'}\n\t\t\t\t\tnote={currentNote}\n\t\t\t\t\thandleClose={() => {\n\t\t\t\t\t\tsetShowAddNote(false)\n\t\t\t\t\t}}\n\t\t\t\t\tonManageNoteSuccess={() => {\n\t\t\t\t\t\tgetNotesList()\n\t\t\t\t\t\tsetShowAddNote(false)\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\n\t\t\t{isShowDeleteModal && (\n\t\t\t\t<DeleteNoteModal\n\t\t\t\t\thandleClose={() => {\n\t\t\t\t\t\tsetShowDeleteModal(false)\n\t\t\t\t\t}}\n\t\t\t\t\thandleDelete={() => {\n\t\t\t\t\t\thandleDeleteNote(currentNote)\n\t\t\t\t\t\tsetShowDeleteModal(false)\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nexport default forwardRef(NotesList)\n"],"names":["props","_useState","useState","_useState2","_slicedToArray","isShowAddNote","setShowAddNote","childRef","useRef","handleAddNote","_jsxs","className","children","_jsx","Button","onClick","style","backgroundColor","borderColor","NotesList","handleCreateNote","ref","favourites","ManageNote","handleClose","onManageNoteSuccess","note","current","getNotesList","baseUrl","title","setTitle","_useState3","_useState4","description","setDescription","_useState5","_useState6","error","setError","_useState7","_useState8","errorMessage","setErrorMessage","userInfo","useContext","AppContext","useEffect","mode","handleRequestResponse","response","data","status","console","log","Modal","show","onHide","Header","closeButton","Title","Body","color","Form","Group","Label","Control","type","placeholder","value","onChange","e","target","as","maxLength","rows","Footer","variant","headers","Authorization","accessToken","username","_data","noteId","_id","axios","put","then","catch","post","width","defaultProps","size","circleColor","disableWrapper","Spinner","classes","attributes","_objectWithoutProperties","_excluded","classList","classNames","concat","_objectSpread","handleDelete","defaultNotesList","isLoading","setIsLoading","notesList","setNotesList","appContext","storedUserInfo","JSON","parse","sessionStorage","getItem","setUserInfo","currentNote","setCurrentNote","_useState9","_useState10","isShowDeleteModal","setShowDeleteModal","get","res","notes","useImperativeHandle","length","map","date","Date","createdAt","formattedDate","Intl","DateTimeFormat","dateStyle","format","isFavourite","Card","Text","display","flexDirection","justifyContent","MdFavoriteBorder","cursor","handleMarkFavourite","MdOutlineModeEditOutline","handleEditNote","MdDeleteOutline","textAlign","paddingTop","DeleteNoteModal","delete","handleDeleteNote","forwardRef"],"sourceRoot":""}